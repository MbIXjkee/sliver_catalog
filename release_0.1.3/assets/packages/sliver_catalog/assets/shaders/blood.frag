{
  "sksl": {
    "entrypoint": "blood_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform vec2 uOffset;\nuniform float uProgress;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nfloat FLT_flutter_local_estimateBloodBoundaryDist(inout vec2 pp, float prog, out bool blood)\n{\n    pp.y += ((((0.4000000059604644775390625 * sin((1.14999997615814208984375 * pp.x) + pp.y)) + (0.20000000298023223876953125 * sin((2.75 * pp.x) + pp.y))) + (0.100000001490116119384765625 * sin(6.849999904632568359375 * pp.x))) + (0.0599999986588954925537109375 * sin(11.5 * pp.x)));\n    float dynThresh = 5.30000019073486328125 * prog;\n    blood = pp.y < dynThresh;\n    return abs(pp.y - dynThresh);\n}\n\nvoid FLT_main()\n{\n    vec2 xy = FLT_flutter_local_FlutterFragCoord() - uOffset;\n    vec2 uv = xy / uSize;\n    bool _103 = uv.x < 0.0;\n    bool _111;\n    if (!_103)\n    {\n        _111 = uv.x > 1.0;\n    }\n    else\n    {\n        _111 = _103;\n    }\n    bool _118;\n    if (!_111)\n    {\n        _118 = uv.y < 0.0;\n    }\n    else\n    {\n        _118 = _111;\n    }\n    bool _125;\n    if (!_118)\n    {\n        _125 = uv.y > 1.0;\n    }\n    else\n    {\n        _125 = _118;\n    }\n    if (_125)\n    {\n        fragColor = vec4(0.0);\n    }\n    else\n    {\n        float aspect = uSize.x / uSize.y;\n        vec2 uvToDEScale = vec2(aspect, 1.0);\n        float scaleFactor = 4.0;\n        vec2 pp_1 = (uv * uvToDEScale) * 4.0;\n        vec2 param = pp_1;\n        float param_1 = uProgress;\n        bool param_2;\n        float _157 = FLT_flutter_local_estimateBloodBoundaryDist(param, param_1, param_2);\n        bool isBlood = param_2;\n        float dist = _157;\n        if (isBlood)\n        {\n            float edgeT = clamp((0.100000001490116119384765625 - dist) / 0.100000001490116119384765625, 0.0, 1.0);\n            vec3 bloodColor = vec3(0.60000002384185791015625, 0.0500000007450580596923828125, 0.0500000007450580596923828125);\n            bloodColor += (vec3(0.20000000298023223876953125, 0.100000001490116119384765625, 0.100000001490116119384765625) * edgeT);\n            fragColor = vec4(bloodColor, 1.0);\n        }\n        else\n        {\n            fragColor = vec4(0.0);\n        }\n    }\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uOffset",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uProgress",
        "rows": 1,
        "type": 10
      }
    ]
  }
}